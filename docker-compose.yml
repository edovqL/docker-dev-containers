version: "3.6"
services:
  mariadb:
    container_name: mariadb
    image: mariadb:10.11
    volumes:
      - sql-data:/var/lib/mysql
    ports:
      - 32768:3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
  mongodb:
    container_name: mongodb
    image: mongo:6.0
    volumes:
      - mongo-data:/data/db
    ports:
      - 32769:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
  redis:
    container_name: redis
    image: redis:7.2-alpine
    ports:
      - 32770:6379
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  postgres:
    container_name: postgres
    image: postgres:15
    ports:
      - 32771:5432
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
  elastic:
    container_name: elastic
    image: elasticsearch:8.11.0
    ports:
      - 32774:9200
      - 32773:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms256m -Xmx512m
    volumes:
      - el-data:/usr/share/elasticsearch/data
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:2.0.18
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf
    healthcheck:
      test:
        ["CMD-SHELL", "mosquitto_pub -h localhost -t health -m ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
  pubsub:
    container_name: pubsub-emulator
    image: gcr.io/google.com/cloudsdktool/google-cloud-cli:456.0.0-alpine
    command: >
      sh -c "gcloud beta emulators pubsub start
      --project=STAGING
      --host-port=0.0.0.0:8085"
    environment:
      - PUBSUB_PROJECT_ID=STAGING
    ports:
      - "8085:8085"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:8085/v1/projects/STAGING || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.12-management
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - mq-data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: rabbit
      RABBITMQ_DEFAULT_PASS: rabbit
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD-SHELL", "echo ruok > /dev/tcp/localhost/2181 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    restart: always
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms512m"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-broker-api-versions --bootstrap-server localhost:9092",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
volumes:
  sql-data:
  mongo-data:
  pg-data:
  el-data:
  mq-data:
